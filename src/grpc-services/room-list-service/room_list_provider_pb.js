// source: room_list_provider.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
var jspb = require("google-protobuf");
var goog = jspb;
var global = Function("return this")();

goog.exportSymbol("proto.towns.GetRoomListRequest", null, global);
goog.exportSymbol(
  "proto.towns.GetRoomListRequest.AuthTokenCheckerCase",
  null,
  global
);
goog.exportSymbol("proto.towns.GetRoomListResponse", null, global);
goog.exportSymbol("proto.towns.RoomInfo", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.towns.GetRoomListRequest = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    null,
    proto.towns.GetRoomListRequest.oneofGroups_
  );
};
goog.inherits(proto.towns.GetRoomListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.towns.GetRoomListRequest.displayName = "proto.towns.GetRoomListRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.towns.RoomInfo = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.towns.RoomInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.towns.RoomInfo.displayName = "proto.towns.RoomInfo";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.towns.GetRoomListResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.towns.GetRoomListResponse.repeatedFields_,
    null
  );
};
goog.inherits(proto.towns.GetRoomListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.towns.GetRoomListResponse.displayName =
    "proto.towns.GetRoomListResponse";
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.towns.GetRoomListRequest.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.towns.GetRoomListRequest.AuthTokenCheckerCase = {
  AUTH_TOKEN_CHECKER_NOT_SET: 0,
  AUTH_TOKEN: 1,
};

/**
 * @return {proto.towns.GetRoomListRequest.AuthTokenCheckerCase}
 */
proto.towns.GetRoomListRequest.prototype.getAuthTokenCheckerCase = function () {
  return /** @type {proto.towns.GetRoomListRequest.AuthTokenCheckerCase} */ (
    jspb.Message.computeOneofCase(
      this,
      proto.towns.GetRoomListRequest.oneofGroups_[0]
    )
  );
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.towns.GetRoomListRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.towns.GetRoomListRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.towns.GetRoomListRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.towns.GetRoomListRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        authToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.towns.GetRoomListRequest}
 */
proto.towns.GetRoomListRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.towns.GetRoomListRequest();
  return proto.towns.GetRoomListRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.towns.GetRoomListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.towns.GetRoomListRequest}
 */
proto.towns.GetRoomListRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAuthToken(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.towns.GetRoomListRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.towns.GetRoomListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.towns.GetRoomListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.towns.GetRoomListRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(1, f);
  }
};

/**
 * optional string auth_token = 1;
 * @return {string}
 */
proto.towns.GetRoomListRequest.prototype.getAuthToken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.towns.GetRoomListRequest} returns this
 */
proto.towns.GetRoomListRequest.prototype.setAuthToken = function (value) {
  return jspb.Message.setOneofField(
    this,
    1,
    proto.towns.GetRoomListRequest.oneofGroups_[0],
    value
  );
};

/**
 * Clears the field making it undefined.
 * @return {!proto.towns.GetRoomListRequest} returns this
 */
proto.towns.GetRoomListRequest.prototype.clearAuthToken = function () {
  return jspb.Message.setOneofField(
    this,
    1,
    proto.towns.GetRoomListRequest.oneofGroups_[0],
    undefined
  );
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.towns.GetRoomListRequest.prototype.hasAuthToken = function () {
  return jspb.Message.getField(this, 1) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.towns.RoomInfo.prototype.toObject = function (opt_includeInstance) {
    return proto.towns.RoomInfo.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.towns.RoomInfo} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.towns.RoomInfo.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        roomId: jspb.Message.getFieldWithDefault(msg, 1, ""),
        takenSlots: jspb.Message.getFieldWithDefault(msg, 2, 0),
        slotsLimit: jspb.Message.getFieldWithDefault(msg, 3, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.towns.RoomInfo}
 */
proto.towns.RoomInfo.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.towns.RoomInfo();
  return proto.towns.RoomInfo.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.towns.RoomInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.towns.RoomInfo}
 */
proto.towns.RoomInfo.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setRoomId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setTakenSlots(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setSlotsLimit(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.towns.RoomInfo.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.towns.RoomInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.towns.RoomInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.towns.RoomInfo.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getTakenSlots();
  if (f !== 0) {
    writer.writeUint32(2, f);
  }
  f = message.getSlotsLimit();
  if (f !== 0) {
    writer.writeUint32(3, f);
  }
};

/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.towns.RoomInfo.prototype.getRoomId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.towns.RoomInfo} returns this
 */
proto.towns.RoomInfo.prototype.setRoomId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional uint32 taken_slots = 2;
 * @return {number}
 */
proto.towns.RoomInfo.prototype.getTakenSlots = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.towns.RoomInfo} returns this
 */
proto.towns.RoomInfo.prototype.setTakenSlots = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional uint32 slots_limit = 3;
 * @return {number}
 */
proto.towns.RoomInfo.prototype.getSlotsLimit = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.towns.RoomInfo} returns this
 */
proto.towns.RoomInfo.prototype.setSlotsLimit = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.towns.GetRoomListResponse.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.towns.GetRoomListResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.towns.GetRoomListResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.towns.GetRoomListResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.towns.GetRoomListResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        roomsList: jspb.Message.toObjectList(
          msg.getRoomsList(),
          proto.towns.RoomInfo.toObject,
          includeInstance
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.towns.GetRoomListResponse}
 */
proto.towns.GetRoomListResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.towns.GetRoomListResponse();
  return proto.towns.GetRoomListResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.towns.GetRoomListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.towns.GetRoomListResponse}
 */
proto.towns.GetRoomListResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.towns.RoomInfo();
        reader.readMessage(
          value,
          proto.towns.RoomInfo.deserializeBinaryFromReader
        );
        msg.addRooms(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.towns.GetRoomListResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.towns.GetRoomListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.towns.GetRoomListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.towns.GetRoomListResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getRoomsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.towns.RoomInfo.serializeBinaryToWriter
    );
  }
};

/**
 * repeated RoomInfo rooms = 1;
 * @return {!Array<!proto.towns.RoomInfo>}
 */
proto.towns.GetRoomListResponse.prototype.getRoomsList = function () {
  return /** @type{!Array<!proto.towns.RoomInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.towns.RoomInfo, 1)
  );
};

/**
 * @param {!Array<!proto.towns.RoomInfo>} value
 * @return {!proto.towns.GetRoomListResponse} returns this
 */
proto.towns.GetRoomListResponse.prototype.setRoomsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.towns.RoomInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.towns.RoomInfo}
 */
proto.towns.GetRoomListResponse.prototype.addRooms = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    1,
    opt_value,
    proto.towns.RoomInfo,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.towns.GetRoomListResponse} returns this
 */
proto.towns.GetRoomListResponse.prototype.clearRoomsList = function () {
  return this.setRoomsList([]);
};

goog.object.extend(exports, proto.towns);
