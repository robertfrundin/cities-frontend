/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
var jspb = require("google-protobuf");
var goog = jspb;
var global = Function("return this")();

goog.exportSymbol("proto.towns.JoinRandomRoomRequest", null, global);
goog.exportSymbol("proto.towns.JoinRandomRoomResponse", null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.towns.JoinRandomRoomRequest = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    null,
    proto.towns.JoinRandomRoomRequest.oneofGroups_
  );
};
goog.inherits(proto.towns.JoinRandomRoomRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.towns.JoinRandomRoomRequest.displayName =
    "proto.towns.JoinRandomRoomRequest";
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.towns.JoinRandomRoomRequest.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.towns.JoinRandomRoomRequest.AuthTokenCheckerCase = {
  AUTH_TOKEN_CHECKER_NOT_SET: 0,
  AUTH_TOKEN: 1,
};

/**
 * @return {proto.towns.JoinRandomRoomRequest.AuthTokenCheckerCase}
 */
proto.towns.JoinRandomRoomRequest.prototype.getAuthTokenCheckerCase =
  function () {
    return /** @type {proto.towns.JoinRandomRoomRequest.AuthTokenCheckerCase} */ (
      jspb.Message.computeOneofCase(
        this,
        proto.towns.JoinRandomRoomRequest.oneofGroups_[0]
      )
    );
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.towns.JoinRandomRoomRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.towns.JoinRandomRoomRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.towns.JoinRandomRoomRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.towns.JoinRandomRoomRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        authToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.towns.JoinRandomRoomRequest}
 */
proto.towns.JoinRandomRoomRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.towns.JoinRandomRoomRequest();
  return proto.towns.JoinRandomRoomRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.towns.JoinRandomRoomRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.towns.JoinRandomRoomRequest}
 */
proto.towns.JoinRandomRoomRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAuthToken(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.towns.JoinRandomRoomRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.towns.JoinRandomRoomRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.towns.JoinRandomRoomRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.towns.JoinRandomRoomRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(1, f);
  }
};

/**
 * optional string auth_token = 1;
 * @return {string}
 */
proto.towns.JoinRandomRoomRequest.prototype.getAuthToken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/** @param {string} value */
proto.towns.JoinRandomRoomRequest.prototype.setAuthToken = function (value) {
  jspb.Message.setOneofField(
    this,
    1,
    proto.towns.JoinRandomRoomRequest.oneofGroups_[0],
    value
  );
};

proto.towns.JoinRandomRoomRequest.prototype.clearAuthToken = function () {
  jspb.Message.setOneofField(
    this,
    1,
    proto.towns.JoinRandomRoomRequest.oneofGroups_[0],
    undefined
  );
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.towns.JoinRandomRoomRequest.prototype.hasAuthToken = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.towns.JoinRandomRoomResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    null,
    proto.towns.JoinRandomRoomResponse.oneofGroups_
  );
};
goog.inherits(proto.towns.JoinRandomRoomResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.towns.JoinRandomRoomResponse.displayName =
    "proto.towns.JoinRandomRoomResponse";
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.towns.JoinRandomRoomResponse.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.towns.JoinRandomRoomResponse.RoomIdCheckerCase = {
  ROOM_ID_CHECKER_NOT_SET: 0,
  ROOM_ID: 1,
};

/**
 * @return {proto.towns.JoinRandomRoomResponse.RoomIdCheckerCase}
 */
proto.towns.JoinRandomRoomResponse.prototype.getRoomIdCheckerCase =
  function () {
    return /** @type {proto.towns.JoinRandomRoomResponse.RoomIdCheckerCase} */ (
      jspb.Message.computeOneofCase(
        this,
        proto.towns.JoinRandomRoomResponse.oneofGroups_[0]
      )
    );
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.towns.JoinRandomRoomResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.towns.JoinRandomRoomResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.towns.JoinRandomRoomResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.towns.JoinRandomRoomResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        roomId: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.towns.JoinRandomRoomResponse}
 */
proto.towns.JoinRandomRoomResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.towns.JoinRandomRoomResponse();
  return proto.towns.JoinRandomRoomResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.towns.JoinRandomRoomResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.towns.JoinRandomRoomResponse}
 */
proto.towns.JoinRandomRoomResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setRoomId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.towns.JoinRandomRoomResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.towns.JoinRandomRoomResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.towns.JoinRandomRoomResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.towns.JoinRandomRoomResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(1, f);
  }
};

/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.towns.JoinRandomRoomResponse.prototype.getRoomId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/** @param {string} value */
proto.towns.JoinRandomRoomResponse.prototype.setRoomId = function (value) {
  jspb.Message.setOneofField(
    this,
    1,
    proto.towns.JoinRandomRoomResponse.oneofGroups_[0],
    value
  );
};

proto.towns.JoinRandomRoomResponse.prototype.clearRoomId = function () {
  jspb.Message.setOneofField(
    this,
    1,
    proto.towns.JoinRandomRoomResponse.oneofGroups_[0],
    undefined
  );
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.towns.JoinRandomRoomResponse.prototype.hasRoomId = function () {
  return jspb.Message.getField(this, 1) != null;
};

goog.object.extend(exports, proto.towns);
