/**
 * @fileoverview gRPC-Web generated client stub for towns
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.6.1
// source: proto/game_info_provider.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {};
grpc.web = require("grpc-web");

const proto = {};
proto.towns = require("./game_info_provider_pb.js");

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.towns.GameInfoProviderServiceClient = function (
  hostname,
  credentials,
  options
) {
  if (!options) options = {};
  options.format = "text";

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, "");
};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.towns.GameInfoProviderServicePromiseClient = function (
  hostname,
  credentials,
  options
) {
  if (!options) options = {};
  options.format = "text";

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, "");
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.towns.GetGameInfoRequest,
 *   !proto.towns.GetGameInfoResponse>}
 */
const methodDescriptor_GameInfoProviderService_GetGameInfo =
  new grpc.web.MethodDescriptor(
    "/towns.GameInfoProviderService/GetGameInfo",
    grpc.web.MethodType.SERVER_STREAMING,
    proto.towns.GetGameInfoRequest,
    proto.towns.GetGameInfoResponse,
    /**
     * @param {!proto.towns.GetGameInfoRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.towns.GetGameInfoResponse.deserializeBinary
  );

/**
 * @param {!proto.towns.GetGameInfoRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.towns.GetGameInfoResponse>}
 *     The XHR Node Readable Stream
 */
proto.towns.GameInfoProviderServiceClient.prototype.getGameInfo = function (
  request,
  metadata
) {
  return this.client_.serverStreaming(
    this.hostname_ + "/towns.GameInfoProviderService/GetGameInfo",
    request,
    metadata || {},
    methodDescriptor_GameInfoProviderService_GetGameInfo
  );
};

/**
 * @param {!proto.towns.GetGameInfoRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.towns.GetGameInfoResponse>}
 *     The XHR Node Readable Stream
 */
proto.towns.GameInfoProviderServicePromiseClient.prototype.getGameInfo =
  function (request, metadata) {
    return this.client_.serverStreaming(
      this.hostname_ + "/towns.GameInfoProviderService/GetGameInfo",
      request,
      metadata || {},
      methodDescriptor_GameInfoProviderService_GetGameInfo
    );
  };

module.exports = proto.towns;
